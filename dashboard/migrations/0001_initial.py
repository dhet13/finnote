# Generated by Django 5.2.6 on 2025-09-11 02:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssetLogUnified',
            fields=[
                ('log_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('asset_type', models.CharField(max_length=20)),
                ('action', models.CharField(max_length=10)),
                ('stock_ticker_symbol', models.TextField(blank=True, null=True)),
                ('property_info_id', models.BigIntegerField(blank=True, null=True)),
                ('asset_name', models.TextField(blank=True, null=True)),
                ('sector_or_region', models.TextField(blank=True, null=True)),
                ('price_per_unit', models.DecimalField(decimal_places=6, max_digits=20)),
                ('quantity', models.DecimalField(decimal_places=6, max_digits=20)),
                ('fee_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('total_amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('currency_code', models.CharField(max_length=3)),
                ('fx_rate_at_trade', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('trade_date', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('amount_deposit', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('amount_monthly', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('source_table', models.TextField()),
            ],
            options={
                'db_table': 'asset_logs_unified',
                'ordering': ['-trade_date'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioHolding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField()),
                ('asset_type', models.CharField(max_length=20)),
                ('stock_ticker_symbol', models.TextField(blank=True, null=True)),
                ('property_info_id', models.BigIntegerField(blank=True, null=True)),
                ('asset_key', models.TextField(db_index=True, editable=False)),
                ('asset_name', models.TextField(blank=True, null=True)),
                ('sector_or_region', models.TextField(blank=True, null=True)),
                ('currency_code', models.CharField(default='KRW', max_length=3)),
                ('total_quantity', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('avg_buy_price', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('invested_amount', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('realized_profit', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('total_buy_amount', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('total_sell_amount', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['user_id'], name='dashboard_p_user_id_470b05_idx'), models.Index(fields=['user_id', 'sector_or_region'], name='dashboard_p_user_id_c8cbfb_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('asset_type', 'stock')), fields=('user_id', 'stock_ticker_symbol'), name='ux_hold_stock'), models.UniqueConstraint(condition=models.Q(('asset_type', 'real_estate')), fields=('user_id', 'property_info_id'), name='ux_hold_re'), models.CheckConstraint(condition=models.Q(models.Q(('asset_type', 'stock'), ('property_info_id__isnull', True), ('stock_ticker_symbol__isnull', False)), models.Q(('asset_type', 'real_estate'), ('property_info_id__isnull', False), ('stock_ticker_symbol__isnull', True)), _connector='OR'), name='chk_hold_polykey')],
                'unique_together': {('user_id', 'asset_key')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField()),
                ('snapshot_date', models.DateField()),
                ('asset_type', models.CharField(max_length=20)),
                ('stock_ticker_symbol', models.TextField(blank=True, null=True)),
                ('property_info_id', models.BigIntegerField(blank=True, null=True)),
                ('asset_key', models.TextField(db_index=True, editable=False)),
                ('quantity', models.DecimalField(decimal_places=6, max_digits=20)),
                ('avg_buy_price', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('invested_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('market_price', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('market_value', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('currency_code', models.CharField(default='KRW', max_length=3)),
            ],
            options={
                'indexes': [models.Index(fields=['user_id', 'snapshot_date'], name='dashboard_p_user_id_db7eb3_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('property_info_id__isnull', True), ('stock_ticker_symbol__isnull', False)), models.Q(('property_info_id__isnull', False), ('stock_ticker_symbol__isnull', True)), _connector='OR'), name='chk_snap_poly_exactly_one_key')],
                'unique_together': {('user_id', 'snapshot_date', 'asset_key')},
            },
        ),
    ]
